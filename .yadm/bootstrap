#!/bin/bash

read -p 'You should have a SSH key from this machine registered with GitHub before proceeding. Continue? [y/*] ' SSHKEYOK
if [[ $SSHKEYOK != "y" ]]
then
  exit
fi

# let's update first
sudo apt-get update

# allow packages to be installed over https
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

# "standards"

sudo apt-get install -y \
  clang \
  git \
  htop \
  lldb \
  openssh-server \
  shellcheck \
  vim

# pony dependencies

sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libssl-dev libpcre2-dev cmake

###
# DE setup - KDE + i3
#

sudo apt-get install kubuntu-desktop i3-wm wmctrl rofi

#
# end DE setup
###

###
# fish shell
#

if ! test -f /usr/bin/fish
then
  sudo apt-add-repository ppa:fish-shell/release-2
  sudo apt-get update
  sudo apt-get install fish
fi

#
# end fish shell
###

###
# vim modules
#

# line number goodness
if ! test -d ~/.vim/pack/numbers/start/numbers
then
  git clone https://github.com/b3niup/numbers.vim.git ~/.vim/pack/numbers/start/numbers
fi

# pony support
if ! test -d ~/.vim/pack/pony-vim-syntax/start/pony-vim-syntax
then
  git clone https://github.com/dleonard0/pony-vim-syntax.git ~/.vim/pack/pony-vim-syntax/start/pony-vim-syntax
fi

#
#
##

###
# powerline-go
#

if ! test -f ~/bin/powerline-go
then
  pushd /tmp || exit
  wget https://github.com/bketelsen/powerline-go/releases/download/v2.0.3/powerline-go_2.0.3_linux_amd64.tar.gz
  tar xzf powerline-go_2.0.3_linux_amd64.tar.gz
  mv powerline-go ~/bin/powerline-go
  chmod a+x ~/bin/powerline-go
  popd || exit

  sudo apt-get install fonts-powerline
fi

#
# end powerline-go
###

###
# git-lfs
#

curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash

#
# end git-lfs
###

###
# Hugo
#

if ! test -f ~/bin/hugo-53 
then
  pushd /tmp || exit
  wget https://github.com/gohugoio/hugo/releases/download/v0.53/hugo_0.53_Linux-64bit.tar.gz
  tar xzf hugo_0.53_Linux-64bit.tar.gz
  mv hugo ~/bin/hugo-53
  chmod a+x ~/bin/hugo-53
  ln -s ~/bin/hugo-53 ~/bin/hugo
  popd || exit
fi

#
# end Hugo
###

###
# Exuberant ctags
#

if ! test -f ~/bin/ctags
then
  pushd /tmp || exit
  wget http://prdownloads.sourceforge.net/ctags/ctags-5.8.tar.gz
  tar xzf ctags-5.8.tar.gz
  pushd ctags-5.8 || exit
  ./configure --prefix=$HOME/
  make
  make install
  popd || exit
  popd || exit
fi

#
# end Exuberant ctags
###

###
# Docker
#

# add Docker GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

# add Docker "stable" repository. 
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

# update to get latest package listings after adding Docker repository
sudo apt-get update

# install latest Docker
sudo apt-get install -y docker-ce docker-ce-cli containerd.io

# allow Docker to me administered without using `sudo`
sudo usermod -aG docker $USER

#
# end Docker
###

###
# configuration
#
sudo chsh -s /usr/bin/fish $USER

#
# END configuration
###

###
# Standard Pony programs
#

# verify standard code location exists
mkdir -p ~/code/ponylang

# clone required repos if they haven't been already
if ! test -d ~/code/ponylang/ponyc
then
  git clone git@github.com:ponylang/ponyc.git
fi

if ! test -d ~/code/ponylang/pony-stable
then
  git clone git@github.com:ponylang/pony-stable.git
fi

if ! test -d ~/code/ponylang/changelog-tool
then
  git clone git@github.com:ponylang/changelog-tool.git
fi

# build and install ponyc if it doesn't already exist
if ! command -v ponyc
then
  read -p 'Number of cores to use building LLVM: ' CORES
  read -p 'Build using "default_pic=true"? [y/n] ' PIC
  if [[ $PIC == "y" ]]
  then
    DEFAULT_PIC='default_pic=true'
  fi

  pushd ~/code/ponylang/ponyc || exit
  make -f Makefile-lib-llvm ${DEFAULT_PIC} use=llvm_link_static -j${CORES}
  sudo make install
  popd || exit
fi

# build and install pony-stable if it doesn't already exist
if ! command -v stable
then
  pushd ~/code/ponylang/pony-stable || exit
  make
  sudo make install
  popd || exit
fi

# build and install changelog-tool if it doesn't already exist
if ! command -v changelog-tool
then
  pushd ~/code/ponylang/changelog-tool || exit
  make
  sudo make install
  popd || exit
fi

#
# end Standard Pony programs
###
